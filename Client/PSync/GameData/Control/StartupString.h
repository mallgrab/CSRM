#pragma once
#pragma pack(1)
struct  __declspec(align(2)) startupString
{
  __int64 field_0;
  __int64 field_8;
  int field_10;
  int field_14;
  int field_18;
  byte gap1C[4];
  char field_20;
  char field_20gap[3];
  byte gap24[252];
  char gamewindowFlag3;
  char gamewindowFlag4;
  char field_gap_122[2];
  char initializeBinkAudio;
  char field_124gap[3];
  int gamewindowFlag1;
  int gamewindowFlag2;
  bool devmode; // was char - enables QA missions menu, restart checkpoint button, and disables the game pausing when focus is lost
  char field_131;
  char field_132;
  char field_133;
  char field_134[3];
  char field_137;
  char dontAllowEnablingLoadoutMenu;
  bool skipStartupLogos; // was char - loads into splash screen, skipping startup logos
  char field_13A;
  bool skipToMenu; // was char - loads into menu, skipping startup logos and splash screen (does not need skipStartupLogos to work)
  char field_13C;
  char field_13Cgap[3];
  __int64 field_140;
  char field_148;
  char field_149;
  byte gap14A[6];
  __int64 field_150;
  __int64 field_158;
  int field_160;
  __int64 field_164;
  byte gap16C[4];
  char field_170;
  char field_170padding[3];
  byte gap174[124];
  int field1F0;
  char gamewindowFlag5;
  char windowedScaleProperty16;
  char windowedScaleProperty24;
  char unused2;
  char unused3;
  char unused4;
  char hideRemedyConfidentialTextInScreenshots;
  char unused6;
  char stringShaderRootDirectory[256];
  char field2FC;
  byte gap2FD[255];
  char setRenderOptionsAAShadowsBloomBlurLights;
  char setRenderOptionsBlurFilmGrainShadeEffect;
  char setRenderOptionsAlbedoMaps;
  char setRenderOptionsSSReflectionNColors;
  char enableRumble;
  char recordCinematicsTweakableDebugPage;
  char field402;
  char disableMemoryTracking;
  char enableLazyGarbageCollection2;
  char enableLazyGarbageCollection1;
  char unused5;
  char alwaysInFocus;
  char unused8;
  char field408gap[7];
  __int64 *unused9;
  int field418;
  int field41C;
  char field420;
  char allocateMemoryAlignmentOrPadding;
  char field422;
  char field423;
  int timeWhenGameWillForceClose;
  char field428;
  char field428gap[7];
  char field430;
  char field430gap[7];
  char field438;
  char field438gap[7];
  __int64 field_440;
  __int64 field_448;
  __int64 field_450;
  int field_458;
  __int64 field_45C;
  byte gap464[4];
  char field_468;
  char field_468gap[3];
  byte gap46C[124];
  __int64 field_4E8;
  __int64 field_4F0;
  int field_4F8;
  char field_4FC[4];
  int startSinglePlayerLevel;
  byte gap504[4];
  char field_508;
  char field_508gap[3];
  byte gap50C[124];
  __int64 field_588;
  __int64 field_590;
  int field_598;
  __int64 field_59C;
  byte gap5A4[4];
  char field_5A8;
  char field_5A8gap[3];
  byte gap5AC[124];
  __int64 field_628;
  __int64 field_630;
  int field_638;
  __int64 field_63C;
  byte gap644[4];
  char field_648;
  char field_648gap[3];
  byte gap64C[124];
  __int64 field_6C8;
  __int64 field_6D0;
  int field_6D8;
  __int64 field_6DC;
  byte gap6E4[4];
  char field_6E8;
  char field_6E8gap[3];
  byte gap6EC[124];
  char field768;
  char field769;
  char field769gap[2];
  int field76C;
  char field770;
  char transitionLoadTexturesExecuteTransition;
  char unused7;
  char gap770[5];
  __int64 field_778;
  __int64 field_780;
  int field_788;
  __int64 field_78C;
  byte gap794[4];
  char field_798;
  char field_798gap[3];
  byte gap79C[124];
  __int16 field_818;
  char field_818gap[6];
  __int64 field_820;
  __int64 field_828;
  int field_830;
  __int64 field_834;
  byte gap83C[4];
  char field_840;
  char field_840gap[3];
  byte gap844[124];
  char enableRemedyWebsocket;
  char unused1;
  char field8C2;
  char field8C3;
  char field8C4;
  char field8C5;
  char field8C6;
  char field8C6gap;
  float serverTickrate;
  char startAutoJoinMultiplayerGame;
  char field8CD;
  char field8CDgap[2];
  __int64 setComputerName;
  __int64 field_8D8;
  int field_8E0;
  __int64 field_8E4;
  byte gap8EC[4];
  char field_8F0;
  char field_8F0gap[3];
  byte gap8F4[124];
  __int64 field_970;
  __int64 field_978;
  int field_980;
  __int64 field_984;
  byte gap98C[4];
  char field_990;
  char field_990gap[3];
  byte gap994[124];
  __int64 field_A10;
  __int64 field_A18;
  int field_A20;
  __int64 field_A24;
  byte gapA2C[4];
  char field_A30;
  char field_A30gap[3];
  char gap[124];
  char windowedScalePropertyCustom;
  char fieldAB0gap[3];
  float setMipBias;
  char setMotionBlur;
  char fieldAB9;
  char fieldABA;
};
#pragma pack(0)